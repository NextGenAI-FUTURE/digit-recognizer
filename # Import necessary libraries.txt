# Import necessary libraries
from sklearn.datasets import load_digits
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score
import matplotlib.pyplot as plt

# Load the digits dataset
digits = load_digits()

# Features (images) and labels (actual digit 0â€“9)
X = digits.data  # Each image is 8x8 = 64 pixels
y = digits.target

# Split into training and testing data (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a simple logistic regression model
model = LogisticRegression(max_iter=1000)  # max_iter ensures it trains completely

# Train the model
model.fit(X_train, y_train)

# Predict on the test set
y_pred = model.predict(X_test)

# Check how accurate the model is
accuracy = accuracy_score(y_test, y_pred)
print("Test Accuracy:", accuracy)

# Show first 5 test images with predictions
for i in range(5):
    plt.imshow(X_test[i].reshape(8, 8), cmap='gray')
    plt.title(f"Predicted: {y_pred[i]} | Actual: {y_test[i]}")
    plt.axis('off')
    plt.show()
